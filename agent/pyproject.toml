[tool.poetry]
name = "auditor-agent"
version = "0.1.0"
description = "LangGraph-driven audit pipeline with Gemini AI Gateway integration"
authors = ["Auditor Team <team@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
langgraph = "^0.2.0"
httpx = "^0.27.0"
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
tenacity = "^8.2.3"
boto3 = "^1.34.0"
numpy = "^1.26.0"
orjson = "^3.9.0"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
ruff = "^0.1.0"
black = "^23.11.0"
mypy = "^1.7.0"
types-boto3 = "^1.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501"]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=src --cov-report=term-missing"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false

